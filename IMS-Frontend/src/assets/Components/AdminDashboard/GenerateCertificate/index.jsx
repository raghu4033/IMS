import moment from "moment";
import { useEffect, useState } from "react";
import ApiService from "../../../../Utils/ApiService";
import { Table } from "../../Common/Table";
import { GenerateCertificateForm } from "./GenerateCrtificateForm";
import Loader from "../../Common/Loader";

const columns = [
  {
    label: "Student Name",
    key: "student",
    renderValue: (value) => {
      return [value?.firstName, value?.lastName].filter(Boolean).join(" ");
    },
  },
  {
    label: "Certificate Date",
    key: "date",
    renderValue: (value) => {
      return value && moment(value).isValid()
        ? moment(value).format("DD MMMM YYYY")
        : "N/A";
    },
  },
  {
    label: "Grade",
    key: "certificateGrade",
    renderValue: (value) => {
      return value;
    },
  },
  {
    label: "Generated By",
    key: "generatedBy",
    renderValue: (value) => {
      return [value?.firstName, value?.lastName].filter(Boolean).join(" ");
    },
  },
];

export const GenerateCertificate = () => {
  const [isOpen, setIsOpen] = useState(false);
  const [certificates, setCertificates] = useState([]);
  const [loading, setLoading] = useState(false);

  const getCertificates = async () => {
    try {
      setLoading(true);
      const resp = await ApiService.get(`${ApiService.ApiURLs.getCertificates}`);
      if (resp.status === 200 && resp.data?.data) {
        console.log(resp.data.data);
        setCertificates(resp.data.data);
      }
      setLoading(false);
    } catch (err) {
      console.log(err);
      setLoading(false);
    }
  };

  useEffect(() => {
    getCertificates();
  }, []);


  if (loading) {
    return <>
      <Loader />
    </>
  }

  return (
    <>
      <div className="action-button">
        <button
          onClick={() => {
            setIsOpen(true);
          }}
          disabled={loading}
        >
          Generate Certificate
        </button>
      </div>

      <GenerateCertificateForm open={isOpen} onClose={() => setIsOpen(false)} getCertificates={getCertificates} />

      <Table rows={certificates} columns={columns} title={"Certificates"} />
    </>
  );
};
